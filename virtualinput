#!/usr/bin/env python
import sys
import time
import os
from pyautogui import typewrite,press
import argparse


DEBUG=False

class CommandLineParser:
    def __init__(self) -> None:
        self.parser = parser = argparse.ArgumentParser(
            description="Program to send keyboard input virtually.",
            epilog=f'''Example Usage 
            {sys.argv[0]} --file fileToSend -time 5 # Send in 5 seconds file fileToSend.
            {sys.argv[0]} --text someTextHere -time 5 # Send in 5 seconds someTextHere.
            ''',
            formatter_class=argparse.RawTextHelpFormatter)
        optional_group = self.parser.add_argument_group(description="Either of the following Arguments is required")
        group = optional_group.add_mutually_exclusive_group(required=True)
        group.add_argument("-f","--file",type=self.validate_file,help="File with text to take input from")
        group.add_argument("-s","--text",help="Specifies some string or text to send")
        self.parser.add_argument("-t","--time",help="Specifies the time delay to send input.",default=5,type=float)
        self.parser.add_argument("-e","--escapes",help="Enables escape parsing",dest="esc",action="store_true")

    def validate_file(self,file):
        if os.path.exists(file):
            return file
        else:
            raise argparse.ArgumentTypeError(f"The given file {file} does not exist")


    def parse(self):
        known_args,unknown_args = None,None
        if(len(sys.argv)==1):
            self.parser.print_help()
            exit(-1)
        else:
            try:
                known_args,unknown_args = self.parser.parse_known_args()
                if(unknown_args):
                    print("Unknown arguments","\t".join(unknown_args),"\n")
                    self.parser.print_help()
                    exit(-1)
                args = vars(known_args)
            except:
                exit(-1)
        if(DEBUG):
            print(known_args,unknown_args)
        return args


command_parser = CommandLineParser()
args = command_parser.parse()


# Here begins the dragons of the operation
if(args["text"] is not None):
    time.sleep(args["time"])
    if(args["esc"]):
        while(args["text"]):
            try:
                slash=args["text"].index("\\")
                s=args["text"][:slash]
                args["text"]=args["text"][slash:]
            except:
                s=args["text"]
                args["text"]=""
            typewrite(s)
            if(args["text"][0]=="\\"):
                esc=args["text"][0:2]
                if(esc[1]=="n"):
                    press("enter")
                elif(esc[1]=="t"):
                    press("tab")
                else:
                    print("Unknown escape "+esc)
                args["text"]=args["text"][2:]
    else:
        typewrite(args["text"])
else:
    time.sleep(args["time"])
    if(args["esc"]):
        #print("Sorry pending implementation")
        f=open(args["file"],"r")
        data=f.readline()
        while(data):
            args["text"]=data
            while(args["text"]):
                try:
                    slash=args["text"].index("\\")
                    s=args["text"][:slash]
                    args["text"]=args["text"][slash:]
                except:
                    s=args["text"]
                    args["text"]=""
                typewrite(s)
                if(len(args["text"])>0):
                    if(args["text"][0]=="\\"):
                        esc=args["text"][0:2]
                        if(esc[1]=="n"):
                            press("enter")
                        elif(esc[1]=="t"):
                            press("tab")
                        elif(esc[1]=="\\"):
                            typewrite("\\")
                        else:
                            print("Unknown escape "+esc)
                        args["text"]=args["text"][2:]
            #press("enter")
            data=f.readline()
        
    else:
        f=open(args["file"],"r")
        data=f.readline()
        while(data):
            typewrite(data)
            #press("enter")
            data=f.readline()
        
        
